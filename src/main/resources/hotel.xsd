<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://localhost:8080"
           targetNamespace="http://localhost:8080" elementFormDefault="qualified">

    <!-- ==================================== basic method ==================================== -->

    <xs:element name="infoResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="info" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- ==================================== hotel endpoints method ==================================== -->

    <!-- add hotel request endpoints  -->
    <xs:element name="addHotelRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="hotel" type="tns:hotelRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- update hotel request endpoints -->
    <xs:element name="updateHotelRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
                <xs:element name="hotel" type="tns:hotelRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- delete hotel by id request endpoints -->
    <xs:element name="deleteHotelByIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get hotel by id request endpoints -->
    <xs:element name="findHotelByIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get hotel by id response endpoints -->
    <xs:element name="findHotelByIdResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="hotel" type="tns:hotelResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get all hotel request endpoints -->
    <xs:element name="findAllHotelsRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get all hotel response endpoints -->
    <xs:element name="findAllHotelsResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="hotelList" type="tns:hotelResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- hotel data request type -->
    <xs:complexType name="hotelRequest">
        <xs:sequence>
            <xs:element name="hotelName" type="xs:string"/>
            <xs:element name="hotelDescription" type="xs:string"/>
            <xs:element name="hotelImagePath" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- hotel data response type -->
    <xs:complexType name="hotelResponse">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="hotelName" type="xs:string"/>
            <xs:element name="hotelDescription" type="xs:string"/>
            <xs:element name="hotelImagePath" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- ==================================== user endpoints method ==================================== -->

    <!-- add user request endpoints -->
    <xs:element name="addUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:userRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- update user request endpoints -->
    <xs:element name="updateUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
                <xs:element name="user" type="tns:userRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- delete user by id request endpoints -->
    <xs:element name="deleteUserByIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get user by id request endpoints -->
    <xs:element name="findUserByIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get user by id response endpoints -->
    <xs:element name="findUserByIdResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:userResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get all user request endpoints -->
    <xs:element name="findAllUsersRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- get all user response endpoints -->
    <xs:element name="findAllUsersResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="usersList" type="tns:userResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- user data request type -->
    <xs:complexType name="userRequest">
        <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element name="userLastName" type="xs:string"/>
            <xs:element name="userLogin" type="xs:string"/>
            <xs:element name="userPassword" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- user data response type -->
    <xs:complexType name="userResponse">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="userName" type="xs:string"/>
            <xs:element name="userLastName" type="xs:string"/>
            <xs:element name="userLogin" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- ==================================== auth endpoints method ==================================== -->

    <!-- login request endpoints -->
    <xs:element name="loginRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="login" type="xs:string"/>
                <xs:element name="password" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- login response endpoints -->
    <xs:element name="loginResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="isAdmin" type="xs:boolean"/>
                <xs:element name="user" type="tns:userResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- logout request endpoints -->
    <xs:element name="logoutRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- logout response endpoints -->
    <xs:element name="logoutResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:userResponse"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- register request endpoints -->
    <xs:element name="registerRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="user" type="tns:userRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- change password request endpoints -->
    <xs:element name="changePasswordRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:int"/>
                <xs:element name="oldPassword" type="xs:string"/>
                <xs:element name="newPassword" type="xs:string"/>
                <xs:element name="confirmPassword" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>
